/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.systemAdmin;

import ui.dormitory.EmpLoginPage;
import ui.dormitory.StudentInitialPage;
import ui.dormitory.SystemAdminLoginPage;
import businesslogic.City;
import businesslogic.Community;
import businesslogic.EcoSystem;
import businesslogic.MealManagement.MealPlanAdmin;
import businesslogic.Person;
import businesslogic.PersonU;
import businesslogic.PersonU.UserRole;
import businesslogic.UniversityManagement.University;
import businesslogic.UniversityManagement.UniversityAdmin;
import businesslogic.dormitory.FeesPaymentHistory;
import static businesslogic.dormitory.FeesPaymentHistory.history;
import businesslogic.dormitory.LoginDetails;
import static businesslogic.dormitory.LoginDetails.EmployeeDetails;
import businesslogic.dormitory.RoomBookingHistory;
import static businesslogic.dormitory.RoomBookingHistory.historyroom;
import businesslogic.dormitory.SalaryPaymentHistory;
import static businesslogic.dormitory.SalaryPaymentHistory.historysal;
import businesslogic.helper.ValidateInputs;
import businesslogic.school.School;
import businesslogic.school.SchoolAdmin;
import businesslogic.school.Student;
import businesslogic.school.Teacher;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import ui.MainJFrame;

/**
 *
 * @author drashtibhingradiya
 */
public class SystemAdminDashboardJPanel extends javax.swing.JPanel {

    /**
     * Creates new form systemAdminDashboardJPanel
     */
    private EcoSystem ecoSystem;
    private Person userLogged;
    private static int schoolCounter = 01;
    private static int universityCounter = 01;
    private static int mealCounter = 01;
    
    LoginDetails StudentDetailsinMain;
    LoginDetails AdminDetailsMain;
    LoginDetails EmployeeDetails;
    LoginDetails HospitalAdminDetails;
    LoginDetails CommunityAdminDetails;
    FeesPaymentHistory history;
    SalaryPaymentHistory historysal;
    RoomBookingHistory historyroom;
    FeesPaymentHistory feesPaymentHistory;
    RoomBookingHistory roomBookingHistory;
    SalaryPaymentHistory salaryPaymentHistory;
    LoginDetails loginDetails;
    
    public SystemAdminDashboardJPanel(EcoSystem ecoSystem, Person userLogged) {
        initComponents();
        setSize(1060, 770);
        this.ecoSystem = ecoSystem;
        this.userLogged = userLogged;
        
        WorkAreaPanel.setVisible(true);
        SchoolPanel.setVisible(false);
        UniversityPanel.setVisible(false);
        DormitoryPanel.setVisible(false);
        mealPlanPanel.setVisible(false);
        btnLogOut.setVisible(true);
        btnStudent.setVisible(false);
        btnSystemAdmin.setVisible(false);
        btnEmployee.setVisible(false);
        btnDromBack.setVisible(false);
        
        populateSchoolTable();
        clearSchoolForm();
        
        populateUniversityTable();
        clearUniversityForm();
        
        populateMealTable();
        clearMealForm();
        
        txtSchoolCode.setEditable(false);
        txtUniversityCode.setEditable(false);
        
        StudentDetailsinMain = new LoginDetails();
        AdminDetailsMain = new LoginDetails();
        EmployeeDetails = new LoginDetails();
        HospitalAdminDetails = new LoginDetails();
        CommunityAdminDetails = new LoginDetails();
        history = new FeesPaymentHistory();
        historysal = new SalaryPaymentHistory();
        historyroom = new RoomBookingHistory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton7 = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        controlPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        btnEmployee = new javax.swing.JButton();
        btnStudent = new javax.swing.JButton();
        btnSystemAdmin = new javax.swing.JButton();
        btnDromBack = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        mealPlanPanel = new javax.swing.JPanel();
        jSplitPane4 = new javax.swing.JSplitPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMeal = new javax.swing.JTable();
        btnViewMeal = new javax.swing.JButton();
        btnUpdateMeal = new javax.swing.JButton();
        btnDeleteMeal = new javax.swing.JButton();
        btnAddMeal = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtMealCode = new javax.swing.JTextField();
        txtMealName = new javax.swing.JTextField();
        txtMealCommunity = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtMealCity = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtMealAdminEmail = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtMealAdminPassword = new javax.swing.JTextField();
        btnMealClearSelection = new javax.swing.JButton();
        WorkAreaPanel = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        SchoolPanel = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSchool = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtSchoolCode = new javax.swing.JTextField();
        txtSchoolName = new javax.swing.JTextField();
        txtSchoolCommunity = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtSchoolCity = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtSchoolPhone = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSchoolAdminEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSchoolAdminPassword = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        UniversityPanel = new javax.swing.JPanel();
        jSplitPane3 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblUniversity = new javax.swing.JTable();
        btnViewUniversity = new javax.swing.JButton();
        btnUpdateUniversity = new javax.swing.JButton();
        btnDeleteUniversity = new javax.swing.JButton();
        btnAddUniversity = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtUniversityCode = new javax.swing.JTextField();
        txtUniversityName = new javax.swing.JTextField();
        txtUniversityCommunity = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtUniversityCity = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtUniversityAdminEmail = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtUniversityAdminPassword = new javax.swing.JTextField();
        btnUniversityClearSelection = new javax.swing.JButton();
        DormitoryPanel = new javax.swing.JPanel();
        MainSplitPane = new javax.swing.JSplitPane();
        RoleSelectionPane = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();

        jButton7.setText("jButton7");

        controlPanel.setBackground(new java.awt.Color(255, 153, 153));

        jButton1.setText("Manage Schools");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Manage University");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Manage Dormitory");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Manage Food Supply");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        btnLogOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        btnEmployee.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEmployee.setText("Employee Login");
        btnEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmployeeActionPerformed(evt);
            }
        });

        btnStudent.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnStudent.setText("Student Login");
        btnStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentActionPerformed(evt);
            }
        });

        btnSystemAdmin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSystemAdmin.setText("System Admin");
        btnSystemAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSystemAdminActionPerformed(evt);
            }
        });

        btnDromBack.setText("Back");
        btnDromBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDromBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnDromBack, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLogOut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnStudent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSystemAdmin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                    .addComponent(btnEmployee))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(btnSystemAdmin)
                .addGap(18, 18, 18)
                .addComponent(btnStudent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEmployee)
                .addGap(114, 114, 114)
                .addComponent(btnDromBack)
                .addGap(18, 18, 18)
                .addComponent(btnLogOut)
                .addContainerGap(379, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(controlPanel);

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        jSplitPane4.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("MANAGE MEAL SUPPLIERS");

        jButton15.setText("Back");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        jButton16.setText("Log Out");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jButton15)
                .addGap(282, 282, 282)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                .addComponent(jButton16)
                .addGap(128, 128, 128))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton16)
                    .addComponent(jButton15))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jSplitPane4.setTopComponent(jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 204, 204));

        tblMeal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Supplier ID", "Supplier Name", "Community", "City"
            }
        ));
        jScrollPane3.setViewportView(tblMeal);

        btnViewMeal.setText("View Supplier");
        btnViewMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewMealActionPerformed(evt);
            }
        });

        btnUpdateMeal.setText("Update Supplier");
        btnUpdateMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMealActionPerformed(evt);
            }
        });

        btnDeleteMeal.setText("Delete Supplier");
        btnDeleteMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMealActionPerformed(evt);
            }
        });

        btnAddMeal.setText("Add Supplier");
        btnAddMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMealActionPerformed(evt);
            }
        });

        jLabel18.setText("Supplier ID:");

        jLabel19.setText("Supplier Name:");

        jLabel20.setText("Community:");

        txtMealCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMealCodeActionPerformed(evt);
            }
        });

        jLabel21.setText("City:");

        txtMealCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMealCityActionPerformed(evt);
            }
        });

        jLabel22.setText("Set Admin Email:");

        jLabel23.setText("Set Admin Password:");

        btnMealClearSelection.setText("Clear Selection");
        btnMealClearSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMealClearSelectionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(btnViewMeal)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnUpdateMeal)
                                    .addComponent(jLabel18))
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteMeal)
                                .addGap(18, 18, 18)
                                .addComponent(btnAddMeal))
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtMealCode, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel23)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtMealAdminPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel20)
                                            .addComponent(jLabel21)
                                            .addComponent(jLabel22))
                                        .addGap(44, 44, 44)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtMealAdminEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                            .addComponent(txtMealCity)
                                            .addComponent(txtMealCommunity)
                                            .addComponent(txtMealName)))))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(412, 412, 412)
                        .addComponent(btnMealClearSelection))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(187, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewMeal)
                    .addComponent(btnUpdateMeal)
                    .addComponent(btnDeleteMeal)
                    .addComponent(btnAddMeal))
                .addGap(36, 36, 36)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtMealCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtMealName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtMealCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtMealCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtMealAdminEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(txtMealAdminPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnMealClearSelection)
                .addContainerGap(442, Short.MAX_VALUE))
        );

        jSplitPane4.setRightComponent(jPanel6);

        javax.swing.GroupLayout mealPlanPanelLayout = new javax.swing.GroupLayout(mealPlanPanel);
        mealPlanPanel.setLayout(mealPlanPanelLayout);
        mealPlanPanelLayout.setHorizontalGroup(
            mealPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane4)
        );
        mealPlanPanelLayout.setVerticalGroup(
            mealPlanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane4, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLayeredPane1.add(mealPlanPanel, "card6");

        WorkAreaPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel24.setBackground(new java.awt.Color(0, 0, 0));
        jLabel24.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("WELCOME ADMIN");
        WorkAreaPanel.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 800, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/pink.jpg"))); // NOI18N
        WorkAreaPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -210, 982, 1220));

        jLayeredPane1.add(WorkAreaPanel, "card2");

        SchoolPanel.setBackground(new java.awt.Color(255, 204, 204));

        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("MANAGE SCHOOLS");

        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        jButton6.setText("Log Out");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 330, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(147, 147, 147)
                .addComponent(jButton6)
                .addGap(152, 152, 152))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6)
                    .addComponent(jButton5))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jSplitPane2.setTopComponent(jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        tblSchool.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "School Code", "School Name", "Phone No.", "Community", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSchool);
        if (tblSchool.getColumnModel().getColumnCount() > 0) {
            tblSchool.getColumnModel().getColumn(2).setHeaderValue("Phone No.");
        }

        jButton8.setText("View School");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Update School");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Delete School");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Add School");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel3.setText("School Code:");

        jLabel4.setText("School Name:");

        jLabel5.setText("Community:");

        txtSchoolCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSchoolCodeActionPerformed(evt);
            }
        });

        jLabel6.setText("City:");

        txtSchoolCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSchoolCityActionPerformed(evt);
            }
        });

        jLabel7.setText("Phone No:");

        txtSchoolPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSchoolPhoneActionPerformed(evt);
            }
        });

        jLabel8.setText("Set Admin Email:");

        jLabel9.setText("Set Admin Password:");

        jButton12.setText("Clear Selection");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jButton8)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtSchoolAdminPassword)
                                    .addGap(46, 46, 46))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton9)
                                        .addComponent(jLabel3))
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton10)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton11)))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtSchoolCode, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8))
                                    .addGap(44, 44, 44)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtSchoolAdminEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                        .addComponent(txtSchoolPhone)
                                        .addComponent(txtSchoolCity)
                                        .addComponent(txtSchoolCommunity)
                                        .addComponent(txtSchoolName))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(401, 401, 401)
                        .addComponent(jButton12)))
                .addContainerGap(223, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton9)
                    .addComponent(jButton10)
                    .addComponent(jButton11))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSchoolCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSchoolName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtSchoolCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtSchoolCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtSchoolPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtSchoolAdminEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtSchoolAdminPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jButton12)
                .addContainerGap(386, Short.MAX_VALUE))
        );

        jSplitPane2.setRightComponent(jPanel2);

        javax.swing.GroupLayout SchoolPanelLayout = new javax.swing.GroupLayout(SchoolPanel);
        SchoolPanel.setLayout(SchoolPanelLayout);
        SchoolPanelLayout.setHorizontalGroup(
            SchoolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2)
        );
        SchoolPanelLayout.setVerticalGroup(
            SchoolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLayeredPane1.add(SchoolPanel, "card3");

        jSplitPane3.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("MANAGE UNIVERSITIES");

        jButton13.setText("Back");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        jButton14.setText("Log Out");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jButton13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 267, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(196, 196, 196)
                .addComponent(jButton14)
                .addGap(130, 130, 130))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14)
                    .addComponent(jButton13))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jSplitPane3.setTopComponent(jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 204, 204));

        tblUniversity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "University Name", "University ID", "Community", "City"
            }
        ));
        jScrollPane2.setViewportView(tblUniversity);

        btnViewUniversity.setText("View University");
        btnViewUniversity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewUniversityActionPerformed(evt);
            }
        });

        btnUpdateUniversity.setText("Update University");
        btnUpdateUniversity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUniversityActionPerformed(evt);
            }
        });

        btnDeleteUniversity.setText("Delete University");
        btnDeleteUniversity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUniversityActionPerformed(evt);
            }
        });

        btnAddUniversity.setText("Add University");
        btnAddUniversity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUniversityActionPerformed(evt);
            }
        });

        jLabel11.setText("University ID:");

        jLabel12.setText("University Name:");

        jLabel13.setText("Community:");

        txtUniversityCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUniversityCodeActionPerformed(evt);
            }
        });

        jLabel14.setText("City:");

        txtUniversityCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUniversityCityActionPerformed(evt);
            }
        });

        jLabel16.setText("Set Admin Email:");

        jLabel17.setText("Set Admin Password:");

        btnUniversityClearSelection.setText("Clear Selection");
        btnUniversityClearSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUniversityClearSelectionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(btnViewUniversity)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnUpdateUniversity)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteUniversity)
                                .addGap(18, 18, 18)
                                .addComponent(btnAddUniversity))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtUniversityCode, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtUniversityAdminPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel16))
                                        .addGap(44, 44, 44)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtUniversityAdminEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                            .addComponent(txtUniversityCity)
                                            .addComponent(txtUniversityCommunity)
                                            .addComponent(txtUniversityName)))))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(412, 412, 412)
                        .addComponent(btnUniversityClearSelection))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(187, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewUniversity)
                    .addComponent(btnUpdateUniversity)
                    .addComponent(btnDeleteUniversity)
                    .addComponent(btnAddUniversity))
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtUniversityCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtUniversityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtUniversityCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtUniversityCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtUniversityAdminEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(txtUniversityAdminPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnUniversityClearSelection)
                .addContainerGap(442, Short.MAX_VALUE))
        );

        jSplitPane3.setRightComponent(jPanel4);

        javax.swing.GroupLayout UniversityPanelLayout = new javax.swing.GroupLayout(UniversityPanel);
        UniversityPanel.setLayout(UniversityPanelLayout);
        UniversityPanelLayout.setHorizontalGroup(
            UniversityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3)
        );
        UniversityPanelLayout.setVerticalGroup(
            UniversityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLayeredPane1.add(UniversityPanel, "card4");

        RoleSelectionPane.setBackground(new java.awt.Color(255, 204, 204));

        javax.swing.GroupLayout RoleSelectionPaneLayout = new javax.swing.GroupLayout(RoleSelectionPane);
        RoleSelectionPane.setLayout(RoleSelectionPaneLayout);
        RoleSelectionPaneLayout.setHorizontalGroup(
            RoleSelectionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );
        RoleSelectionPaneLayout.setVerticalGroup(
            RoleSelectionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1010, Short.MAX_VALUE)
        );

        MainSplitPane.setLeftComponent(RoleSelectionPane);

        jPanel7.setBackground(new java.awt.Color(255, 204, 204));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 968, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1010, Short.MAX_VALUE)
        );

        MainSplitPane.setRightComponent(jPanel7);

        javax.swing.GroupLayout DormitoryPanelLayout = new javax.swing.GroupLayout(DormitoryPanel);
        DormitoryPanel.setLayout(DormitoryPanelLayout);
        DormitoryPanelLayout.setHorizontalGroup(
            DormitoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainSplitPane)
        );
        DormitoryPanelLayout.setVerticalGroup(
            DormitoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainSplitPane)
        );

        jLayeredPane1.add(DormitoryPanel, "card5");

        jSplitPane1.setRightComponent(jLayeredPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        // UPDATE SCHOOL
        if(isSchoolDataEnteredValid()) {
            if(!isNoEmptyFieldCheck(txtSchoolCode)) {
                JOptionPane.showMessageDialog(this,"Please do not leave School Code Name field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtSchoolName)) {
                JOptionPane.showMessageDialog(this,"Please do not leave School Name field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtSchoolCommunity)) {
                JOptionPane.showMessageDialog(this,"Please do not leave Community field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtSchoolCity)) {
                JOptionPane.showMessageDialog(this,"Please do not leave City field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtSchoolAdminEmail)) {
                JOptionPane.showMessageDialog(this,"Please do not leave School Admin Email field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtSchoolAdminPassword)) {
                JOptionPane.showMessageDialog(this,"Please do not leave School Admin Password field empty!");
                return;
            }
            
            txtSchoolCode.setEditable(false);
            txtSchoolAdminEmail.setEditable(false);
            String schoolCode = txtSchoolCode.getText();
            String schoolName = txtSchoolName.getText();
            String schoolPhone = txtSchoolPhone.getText();
            String schoolCommunity = txtSchoolCommunity.getText();
            String schoolCity = txtSchoolCity.getText();
            String schoolAdminEmail = txtSchoolAdminEmail.getText();
            String schoolAdminPassword = txtSchoolAdminPassword.getText();
            
            School s = ecoSystem.getSchoolDirectory().getSchoolByCode(schoolCode);
            SchoolAdmin p = ecoSystem.getSchoolAdminDirectory().getSchoolAdminByEmail(schoolAdminEmail);
            if(p.getUserRole().toString().equals("SCHOOL_ADMIN")) {             
                s.setSchoolName(schoolName);
                s.setPhoneNo(Long.parseLong(schoolPhone));
                s.setSchoolAdminEmail(schoolAdminEmail);
                s.setSchoolAdminPassword(schoolAdminPassword);
                Community com;
                if(!s.getCommunity().getCommunity().equals(schoolCommunity)){
                    com = ecoSystem.getCommunityDirectory().addNewCommunity();
                    com.setCommunity(schoolCommunity);
                    com.setCity(new City(schoolCity));
                    s.setCommunity(com);
                }
                JOptionPane.showMessageDialog(this, "School Record Updated.");
                clearSchoolForm();
                populateSchoolTable();
            
            } else {
                JOptionPane.showMessageDialog(this,"No such School Admin Exists!");
                return;
            }
        
        }  else {
            JOptionPane.showMessageDialog(this, "Error Updating School. Please check DataTypes");
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void txtSchoolCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSchoolCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSchoolCodeActionPerformed

    private void txtSchoolPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSchoolPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSchoolPhoneActionPerformed

    private void txtSchoolCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSchoolCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSchoolCityActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        switchToWorkAreaPanel();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        // VIEW TABLE SCHOOL RECORD
        int selectedRowIndex = tblSchool.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to View!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblSchool.getModel();
        School s = (School)model.getValueAt(selectedRowIndex, 0);
        
        txtSchoolCode.setText(s.getSchoolCode());
        txtSchoolName.setText(s.getSchoolName());
        txtSchoolCommunity.setText(s.getCommunity().getCommunity());
        txtSchoolCity.setText(s.getCommunity().getCity().getCity());
        txtSchoolPhone.setText(String.valueOf(s.getPhoneNo()));
        txtSchoolAdminEmail.setText(s.getSchoolAdminEmail());
        txtSchoolAdminPassword.setText(s.getSchoolAdminPassword());
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // Manage School button
        WorkAreaPanel.setVisible(false);
        SchoolPanel.setVisible(true);
        UniversityPanel.setVisible(false);
        DormitoryPanel.setVisible(false);
        mealPlanPanel.setVisible(false);
        btnLogOut.setVisible(false);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        // delete school
        int selectedRowIndex = tblSchool.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to View!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblSchool.getModel();
        School s = (School)model.getValueAt(selectedRowIndex, 0);
        Person p = ecoSystem.getPersonDirectory().getPersonByEmail(s.getSchoolAdminEmail());
        
        ecoSystem.getSchoolDirectory().deleteSchool(s);
        ecoSystem.getPersonDirectory().deletePerson(p);
        
        JOptionPane.showMessageDialog(this, "School record deleted!");
        populateSchoolTable();
        clearSchoolForm();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        // add school
        if(isSchoolDataEnteredValid()) {
//            if(!isNoEmptyFieldCheck(txtSchoolCode)) {
//                JOptionPane.showMessageDialog(this,"Please do not leave School Code Name field empty!");
//                return;
//            }
            if(!isNoEmptyFieldCheck(txtSchoolName)) {
                JOptionPane.showMessageDialog(this,"Please do not leave School Name field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtSchoolPhone)) {
                JOptionPane.showMessageDialog(this,"Please do not leave Phone no. field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtSchoolCommunity)) {
                JOptionPane.showMessageDialog(this,"Please do not leave Community field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtSchoolCity)) {
                JOptionPane.showMessageDialog(this,"Please do not leave City field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtSchoolAdminEmail)) {
                JOptionPane.showMessageDialog(this,"Please do not leave School Admin Email field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtSchoolAdminPassword)) {
                JOptionPane.showMessageDialog(this,"Please do not leave School Admin Password field empty!");
                return;
            }
            
            txtSchoolCode.setEditable(false);
            String schoolCode = "school"+schoolCounter;
            schoolCounter++;
            String schoolName = txtSchoolName.getText();
            Long schoolPhone = Long.parseLong(txtSchoolPhone.getText());
            String schoolCommunity = txtSchoolCommunity.getText();
            String schoolCity = txtSchoolCity.getText();
            String schoolAdminEmail = txtSchoolAdminEmail.getText();
            String schoolAdminPassword = txtSchoolAdminPassword.getText();
            
            Community com;
            if(!ecoSystem.getCommunityDirectory().getCommunityDirectory().equals(schoolCommunity)){
                com = ecoSystem.getCommunityDirectory().addNewCommunity();
                com.setCommunity(schoolCommunity);
                com.setCity(new City(schoolCity));
//                s.setCommunity(c);
            } else{
                com = ecoSystem.getCommunityDirectory().getCommunityByName(schoolCommunity);
            }
            
            School s = ecoSystem.getSchoolDirectory().addNewSchool(new School( schoolName, schoolCode, com, 
                    schoolPhone, schoolAdminEmail, schoolAdminPassword));
            
            ecoSystem.getSchoolAdminDirectory().getSchoolAdminDirectory().add(new SchoolAdmin(null,null,null, null,
                null,1234567890,schoolAdminEmail,null,schoolAdminPassword, Person.UserRole.SCHOOL_ADMIN, schoolCode));
            
            JOptionPane.showMessageDialog(this, "School Record Added.");
            populateSchoolTable();
            clearSchoolForm();
            
        } else{
            JOptionPane.showMessageDialog(this, "Error Adding School. Please check DataTypes");
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        switchToMainFrame();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        switchToMainFrame();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        switchToWorkAreaPanel();        
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        switchToMainFrame();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void txtUniversityCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUniversityCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUniversityCityActionPerformed

    private void txtUniversityCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUniversityCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUniversityCodeActionPerformed

    private void btnAddUniversityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUniversityActionPerformed
        // TODO add your handling code here:
        // ADD University
        
        if(isUniversityDataEnteredValid()){
            if(!isNoEmptyFieldCheck(txtUniversityName)) {
                JOptionPane.showMessageDialog(this,"Please do not leave University Name field empty!");
                return;
            }           
            if(!isNoEmptyFieldCheck(txtUniversityCommunity)) {
                JOptionPane.showMessageDialog(this,"Please do not leave Community field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtUniversityCity)) {
                JOptionPane.showMessageDialog(this,"Please do not leave City field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtUniversityAdminEmail)) {
                JOptionPane.showMessageDialog(this,"Please do not leave University Admin Email field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtUniversityAdminPassword)) {
                JOptionPane.showMessageDialog(this,"Please do not leave University Admin Password field empty!");
                return;
            }
            
            txtUniversityCode.setEditable(false);
            String universityCode = "uni"+universityCounter;
            universityCounter++;
            String universityName = txtUniversityName.getText();
            String universityCommunity = txtUniversityCommunity.getText();
            String universityCity = txtUniversityCity.getText();
            String universityAdminEmail = txtUniversityAdminEmail.getText();
            String universityAdminPassword = txtUniversityAdminPassword.getText();
            
            Community com;
            if(!ecoSystem.getCommunityDirectory().getCommunityDirectory().equals(universityCommunity)){
                com = ecoSystem.getCommunityDirectory().addNewCommunity();
                com.setCommunity(universityCommunity);
                com.setCity(new City(universityCity));
//                s.setCommunity(c);
            } else{
                com = ecoSystem.getCommunityDirectory().getCommunityByName(universityCommunity);
            }
            
            University u = ecoSystem.getUniversityDirectory().addNewUniversity(new University( universityName, universityCode, com, 
                    universityAdminEmail, universityAdminPassword));
            
            ecoSystem.getPersonDirectoryRef().getPersonDirectory().add(new UniversityAdmin(null, null, null, null, 1234567890,
               universityAdminEmail, com, universityAdminPassword,universityCode));
            
            JOptionPane.showMessageDialog(this, "University Record Added.");
            populateUniversityTable();
            clearUniversityForm();
            
            
        } else{
            JOptionPane.showMessageDialog(this, "Error Adding University. Please check DataTypes");
        }
    }//GEN-LAST:event_btnAddUniversityActionPerformed

    private void btnDeleteUniversityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUniversityActionPerformed
        // TODO add your handling code here:
        // delete university
        int selectedRowIndex = tblUniversity.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to View!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblUniversity.getModel();
        University s = (University)model.getValueAt(selectedRowIndex, 0);
        PersonU p = ecoSystem.getPersonDirectoryRef().getPersonByEmail(s.getUniversityAdminEmail());
        
        ecoSystem.getUniversityDirectory().deleteUniversity(s);
        ecoSystem.getPersonDirectoryRef().deletePerson(p);
        
        JOptionPane.showMessageDialog(this, "University record deleted!");
        populateUniversityTable();
        clearUniversityForm();
    }//GEN-LAST:event_btnDeleteUniversityActionPerformed

    private void btnUpdateUniversityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateUniversityActionPerformed
        // TODO add your handling code here:
        // UPDATE UNIVERSITY
        if(isUniversityDataEnteredValid()) {
            if(!isNoEmptyFieldCheck(txtUniversityCode)) {
                JOptionPane.showMessageDialog(this,"Please do not leave University Code Name field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtUniversityName)) {
                JOptionPane.showMessageDialog(this,"Please do not leave University Name field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtUniversityCommunity)) {
                JOptionPane.showMessageDialog(this,"Please do not leave Community field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtUniversityCity)) {
                JOptionPane.showMessageDialog(this,"Please do not leave City field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtUniversityAdminEmail)) {
                JOptionPane.showMessageDialog(this,"Please do not leave University Admin Email field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtUniversityAdminPassword)) {
                JOptionPane.showMessageDialog(this,"Please do not leave School Admin Password field empty!");
                return;
            }
            
            txtUniversityCode.setEditable(false);
            txtUniversityAdminEmail.setEditable(false);
            String universityCode = txtUniversityCode.getText();
            String universityName = txtUniversityName.getText();
            String universityCommunity = txtUniversityCommunity.getText();
            String universityCity = txtUniversityCity.getText();
            String universityAdminEmail = txtUniversityAdminEmail.getText();
            String universityAdminPassword = txtUniversityAdminPassword.getText();
            
            University u = ecoSystem.getUniversityDirectory().getUniversityByCode(universityCode);
            UniversityAdmin p = ecoSystem.getUniversityAdminDirectory().getUniversityAdminByEmail(universityAdminEmail);
                       
                u.setUniversityName(universityName);
                u.setUniversityAdminEmail(universityAdminEmail);
                u.setUniversityAdminPassword(universityAdminPassword);
                Community com;
                if(!u.getCommunity().getCommunity().equals(universityCommunity)){
                    com = ecoSystem.getCommunityDirectory().addNewCommunity();
                    com.setCommunity(universityCommunity);
                    com.setCity(new City(universityCity));
                    u.setCommunity(com);
                }
                JOptionPane.showMessageDialog(this, "University Record Updated.");
                clearSchoolForm();
                populateUniversityTable();
            
            }  else {
            JOptionPane.showMessageDialog(this, "Error Updating University. Please check DataTypes");
        }
            
            
    }//GEN-LAST:event_btnUpdateUniversityActionPerformed

    private void btnViewUniversityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewUniversityActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblUniversity.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to View!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblUniversity.getModel();
        University u = (University)model.getValueAt(selectedRowIndex, 0);
        
        txtUniversityCode.setText(u.getUniversityID());
        txtUniversityName.setText(u.getUniversityName());
        txtUniversityCommunity.setText(u.getCommunity().getCommunity());
        txtUniversityCity.setText(u.getCommunity().getCity().getCity());
        txtUniversityAdminEmail.setText(u.getUniversityAdminEmail());
        txtUniversityAdminPassword.setText(u.getUniversityAdminPassword());
    }//GEN-LAST:event_btnViewUniversityActionPerformed

    private void btnUniversityClearSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUniversityClearSelectionActionPerformed
        // TODO add your handling code here:
        clearUniversityForm();
    }//GEN-LAST:event_btnUniversityClearSelectionActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        clearSchoolForm();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // manage university button
        WorkAreaPanel.setVisible(false);
        SchoolPanel.setVisible(false);
        UniversityPanel.setVisible(true);
        DormitoryPanel.setVisible(false);
        mealPlanPanel.setVisible(false);
        btnLogOut.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here
        // BACK
        switchToWorkAreaPanel();
        
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        switchToMainFrame();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void btnViewMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewMealActionPerformed
        // TODO add your handling code here:
        // view supplier
        int selectedRowIndex = tblMeal.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to View!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblMeal.getModel();
        MealPlanAdmin m = (MealPlanAdmin)model.getValueAt(selectedRowIndex, 0);
        
        txtMealCode.setText(m.getPersonId());
        txtMealName.setText(m.getPersonName());
        txtMealCommunity.setText(m.getCommunity().getCommunity());
        txtMealCity.setText(m.getCommunity().getCity().getCity());
        txtMealAdminEmail.setText(m.getPersonEmailAddress());
        txtMealAdminPassword.setText(m.getUserPassword());
    }//GEN-LAST:event_btnViewMealActionPerformed

    private void btnUpdateMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateMealActionPerformed
        // TODO add your handling code here:
        // update supplier
        if(isMealDataEnteredValid()) {
            if(!isNoEmptyFieldCheck(txtMealCode)) {
                JOptionPane.showMessageDialog(this,"Please do not leave Supplier ID Name field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtMealName)) {
                JOptionPane.showMessageDialog(this,"Please do not leave Supplier Name field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtMealCommunity)) {
                JOptionPane.showMessageDialog(this,"Please do not leave Community field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtMealCity)) {
                JOptionPane.showMessageDialog(this,"Please do not leave City field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtMealAdminEmail)) {
                JOptionPane.showMessageDialog(this,"Please do not leave Supplier Admin Email field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtMealAdminPassword)) {
                JOptionPane.showMessageDialog(this,"Please do not leave Supplier Admin Password field empty!");
                return;
            }
            
            txtMealCode.setEditable(false);
            txtMealAdminEmail.setEditable(false);
            String mealCode = txtMealCode.getText();
            String mealName = txtMealName.getText();
            String mealCommunity = txtMealCommunity.getText();
            String mealCity = txtMealCity.getText();
            String mealAdminEmail = txtMealAdminEmail.getText();
            String mealAdminPassword = txtMealAdminPassword.getText();
            
            MealPlanAdmin m = ecoSystem.getMealPlanAdminDirectory().getMealPlanAdminByEmail(mealAdminEmail);
            
//            UniversityAdmin p = ecoSystem.getUniversityAdminDirectory().getUniversityAdminByEmail(universityAdminEmail);
            
                m.setPersonName(mealName);
                m.setPersonEmailAddress(mealAdminEmail);
                m.setUserPassword(mealAdminPassword);
       
                Community com;
                if(!m.getCommunity().getCommunity().equals(mealCommunity)){
                    com = ecoSystem.getCommunityDirectory().addNewCommunity();
                    com.setCommunity(mealCommunity);
                    com.setCity(new City(mealCity));
                    m.setCommunity(com);
                }
                JOptionPane.showMessageDialog(this, "Meal Plan Admin Record Updated.");
                clearMealForm();
                populateMealTable();
            
            
            
            }  else {
            JOptionPane.showMessageDialog(this, "Error Updating Meal Plan Admin. Please check DataTypes");
        }
        
    }//GEN-LAST:event_btnUpdateMealActionPerformed

    private void btnDeleteMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMealActionPerformed
        // TODO add your handling code here:
        // delete meal plan supplier
        int selectedRowIndex = tblMeal.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to View!");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblMeal.getModel();
        MealPlanAdmin m = (MealPlanAdmin)model.getValueAt(selectedRowIndex, 0);
        
        ecoSystem.getPersonDirectoryRef().deletePerson(m);
        
        JOptionPane.showMessageDialog(this, "Meal Plan Admin record deleted!");
        populateMealTable();
        clearMealForm();
    }//GEN-LAST:event_btnDeleteMealActionPerformed

    private void btnAddMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMealActionPerformed
        // TODO add your handling code here:
        // add supplier
        if(isMealDataEnteredValid()){
            if(!isNoEmptyFieldCheck(txtMealName)) {
                JOptionPane.showMessageDialog(this,"Please do not leave Meal Plan Admin Name field empty!");
                return;
            }           
            if(!isNoEmptyFieldCheck(txtMealCommunity)) {
                JOptionPane.showMessageDialog(this,"Please do not leave Community field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtMealCity)) {
                JOptionPane.showMessageDialog(this,"Please do not leave City field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtMealAdminEmail)) {
                JOptionPane.showMessageDialog(this,"Please do not leave Meal Plan Admin Email field empty!");
                return;
            }
            if(!isNoEmptyFieldCheck(txtMealAdminPassword)) {
                JOptionPane.showMessageDialog(this,"Please do not leave Meal Plan Admin Password field empty!");
                return;
            }
            
            txtMealCode.setEditable(false);
            String mealCode = String.valueOf(mealCounter);
            mealCounter++;
            String mealName = txtMealName.getText();
            String mealCommunity = txtMealCommunity.getText();
            String mealCity = txtMealCity.getText();
            String mealAdminEmail = txtMealAdminEmail.getText();
            String mealAdminPassword = txtMealAdminPassword.getText();
            
            Community com;
            if(!ecoSystem.getCommunityDirectory().getCommunityDirectory().equals(mealCommunity)){
                com = ecoSystem.getCommunityDirectory().addNewCommunity();
                com.setCommunity(mealCommunity);
                com.setCity(new City(mealCity));
//                s.setCommunity(c);
            } else{
                com = ecoSystem.getCommunityDirectory().getCommunityByName(mealCommunity);
            }
            boolean a = ecoSystem.getPersonDirectoryRef().getPersonDirectory().add(new MealPlanAdmin(mealName, null, 
                    mealCode,null, 1234567890, mealAdminEmail, com, 
                    mealAdminPassword, mealCode ));
            
            System.out.println(a);
            JOptionPane.showMessageDialog(this, "Meal Plan Record Record Added.");
            populateMealTable();
            clearMealForm();
            
            
        } else{
            JOptionPane.showMessageDialog(this, "Error Adding Meal Plan Admin. Please check DataTypes");
        }
    }//GEN-LAST:event_btnAddMealActionPerformed

    private void txtMealCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMealCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMealCodeActionPerformed

    private void txtMealCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMealCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMealCityActionPerformed

    private void btnMealClearSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMealClearSelectionActionPerformed
        // TODO add your handling code here:
        clearMealForm();
    }//GEN-LAST:event_btnMealClearSelectionActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //
        WorkAreaPanel.setVisible(false);
        SchoolPanel.setVisible(false);
        UniversityPanel.setVisible(false);
        DormitoryPanel.setVisible(false);
        btnLogOut.setVisible(false);
        mealPlanPanel.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnSystemAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSystemAdminActionPerformed
        // TODO add your handling code here:AdminDetailsMain
        SystemAdminLoginPage AdminLogin = new SystemAdminLoginPage(AdminDetailsMain,EmployeeDetails,HospitalAdminDetails,CommunityAdminDetails,history,StudentDetailsinMain,historysal, historyroom);
        MainSplitPane.setRightComponent(AdminLogin);
    }//GEN-LAST:event_btnSystemAdminActionPerformed

    private void btnEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmployeeActionPerformed
        // TODO add your handling code here:
        EmpLoginPage EmployeeFirstPage = new EmpLoginPage(EmployeeDetails,history,StudentDetailsinMain,historysal,historyroom);
        MainSplitPane.setRightComponent(EmployeeFirstPage);
    }//GEN-LAST:event_btnEmployeeActionPerformed

    private void btnStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentActionPerformed
        // TODO add your handling code here:
        StudentInitialPage StudentFirstPage = new StudentInitialPage(this.StudentDetailsinMain,history);
        MainSplitPane.setRightComponent(StudentFirstPage);
    }//GEN-LAST:event_btnStudentActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jButton1.setVisible(false);
        jButton2.setVisible(false);
        jButton4.setVisible(false);
        btnDromBack.setVisible(true);
        
        WorkAreaPanel.setVisible(false);
        SchoolPanel.setVisible(false);
        UniversityPanel.setVisible(false);
        DormitoryPanel.setVisible(true);
        mealPlanPanel.setVisible(false);
        btnLogOut.setVisible(true);
        btnStudent.setVisible(true);
        btnSystemAdmin.setVisible(true);
        btnEmployee.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnDromBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDromBackActionPerformed
        // TODO add your handling code here:
        // dorm back button
        switchToWorkAreaPanel();
        jButton1.setVisible(true);
        jButton2.setVisible(true);
        jButton4.setVisible(true);
        
        btnStudent.setVisible(false);
        btnSystemAdmin.setVisible(false);
        btnEmployee.setVisible(false);
    }//GEN-LAST:event_btnDromBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DormitoryPanel;
    private javax.swing.JSplitPane MainSplitPane;
    private javax.swing.JPanel RoleSelectionPane;
    private javax.swing.JPanel SchoolPanel;
    private javax.swing.JPanel UniversityPanel;
    private javax.swing.JPanel WorkAreaPanel;
    private javax.swing.JButton btnAddMeal;
    private javax.swing.JButton btnAddUniversity;
    private javax.swing.JButton btnDeleteMeal;
    private javax.swing.JButton btnDeleteUniversity;
    private javax.swing.JButton btnDromBack;
    private javax.swing.JButton btnEmployee;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnMealClearSelection;
    private javax.swing.JButton btnStudent;
    private javax.swing.JButton btnSystemAdmin;
    private javax.swing.JButton btnUniversityClearSelection;
    private javax.swing.JButton btnUpdateMeal;
    private javax.swing.JButton btnUpdateUniversity;
    private javax.swing.JButton btnViewMeal;
    private javax.swing.JButton btnViewUniversity;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JSplitPane jSplitPane4;
    private javax.swing.JPanel mealPlanPanel;
    private javax.swing.JTable tblMeal;
    private javax.swing.JTable tblSchool;
    private javax.swing.JTable tblUniversity;
    private javax.swing.JTextField txtMealAdminEmail;
    private javax.swing.JTextField txtMealAdminPassword;
    private javax.swing.JTextField txtMealCity;
    private javax.swing.JTextField txtMealCode;
    private javax.swing.JTextField txtMealCommunity;
    private javax.swing.JTextField txtMealName;
    private javax.swing.JTextField txtSchoolAdminEmail;
    private javax.swing.JTextField txtSchoolAdminPassword;
    private javax.swing.JTextField txtSchoolCity;
    private javax.swing.JTextField txtSchoolCode;
    private javax.swing.JTextField txtSchoolCommunity;
    private javax.swing.JTextField txtSchoolName;
    private javax.swing.JTextField txtSchoolPhone;
    private javax.swing.JTextField txtUniversityAdminEmail;
    private javax.swing.JTextField txtUniversityAdminPassword;
    private javax.swing.JTextField txtUniversityCity;
    private javax.swing.JTextField txtUniversityCode;
    private javax.swing.JTextField txtUniversityCommunity;
    private javax.swing.JTextField txtUniversityName;
    // End of variables declaration//GEN-END:variables

    private void switchToWorkAreaPanel() {
        WorkAreaPanel.setVisible(true);
        SchoolPanel.setVisible(false);
        UniversityPanel.setVisible(false);
        DormitoryPanel.setVisible(false);
        mealPlanPanel.setVisible(false);
        btnLogOut.setVisible(true);
    }

    private void clearSchoolForm() {
        txtSchoolCode.setText("");
        txtSchoolName.setText("");
        txtSchoolCity.setText("");
        txtSchoolCommunity.setText("");
        txtSchoolPhone.setText("");
        txtSchoolAdminEmail.setText("");
        txtSchoolAdminPassword.setText("");
    }

    private void populateSchoolTable() {
        DefaultTableModel model = (DefaultTableModel) tblSchool.getModel();
        model.setRowCount(0);
        
        for(School s : ecoSystem.getSchoolDirectory().getSchoolDirectory()) {
            Object[] row = new Object[5];
            row[0] = s;
            row[1] = s.getSchoolName();
            row[2] = s.getPhoneNo();
            row[3] = s.getCommunity().getCommunity();
            row[4] = s.getCommunity().getCity().getCity();
            model.addRow(row);
        }
    }
    
    private void populateUniversityTable() {
        DefaultTableModel model = (DefaultTableModel) tblUniversity.getModel();
        model.setRowCount(0);
        // add row code
        for(University u : ecoSystem.getUniversityDirectory().getUniversityDirectory()) {
            Object[] row = new Object[4];
            row[0] = u;
            row[1] = u.getUniversityName();
            row[2] = u.getCommunity().getCommunity();
            row[3] = u.getCommunity().getCity().getCity();
            model.addRow(row);
        }
    }
    
    private void populateMealTable() {
        DefaultTableModel model = (DefaultTableModel) tblMeal.getModel();
        model.setRowCount(0);
        
        for(PersonU m : ecoSystem.getPersonDirectoryRef().getPersonDirectory()) {
            UserRole u = m.getUserRole();
            if(String.valueOf(u).equals("MEALPLAN_ADMIN")) {
                Object[] row = new Object[4];
                row[0] = m;
                row[1] = m.getPersonName();
                row[2] = m.getCommunity().getCommunity();
                row[3] = m.getCommunity().getCity().getCity();
                model.addRow(row);
            }
        }
    }
    
    private boolean isSchoolDataEnteredValid() {
        if(ValidateInputs.isNameValid(txtSchoolName.getText()) && ValidateInputs.isEmailValid(txtSchoolAdminEmail.getText()) 
                && ValidateInputs.isPasswordValid(txtSchoolAdminPassword.getText()) 
                && ValidateInputs.isPhoneNumberValid(txtSchoolPhone.getText())) {
            return true;
        }
        return false;
    }

    private boolean isNoEmptyFieldCheck(JTextField txtField) {
        if(!txtField.getText().equals("")){
            return true;
        }
        return false;
    }
    
    private void switchToMainFrame() {
        MainJFrame mainFrame = (MainJFrame) SwingUtilities.getRoot(this);
        mainFrame.removeSystemAdminDashboardJPanel(ecoSystem);
        mainFrame.setVisible(true);
    }

    private void clearUniversityForm() {
        txtUniversityCode.setText("");
        txtUniversityName.setText("");
        txtUniversityCity.setText("");
        txtUniversityCommunity.setText("");
        txtUniversityAdminEmail.setText("");
        txtUniversityAdminPassword.setText("");
    }

    private boolean isUniversityDataEnteredValid() {
        if(ValidateInputs.isNameValid(txtUniversityName.getText()) && ValidateInputs.isEmailValid(txtUniversityAdminEmail.getText()) 
                && ValidateInputs.isPasswordValid(txtUniversityAdminPassword.getText()) 
            ) {
            return true;
        }
        return false;

    }

    private void clearMealForm() {
        txtMealCode.setText("");
        txtMealName.setText("");
        txtMealCity.setText("");
        txtMealCommunity.setText("");
        txtMealAdminEmail.setText("");
        txtMealAdminPassword.setText("");
    }

    private boolean isMealDataEnteredValid() {
        if(ValidateInputs.isNameValid(txtMealName.getText()) && ValidateInputs.isEmailValid(txtMealAdminEmail.getText()) 
                && ValidateInputs.isPasswordValid(txtMealAdminPassword.getText()) 
            ) {
            return true;
        }
        return false;
    }

   
}
